#+LATEX_CLASS: book-noparts
#+LATEX_CLASS_OPTIONS: [a4paper]
#+LATEX_HEADER: \usepackage{booktabs}
#+LaTeX_HEADER: \usepackage{pdfpages}

#+LATEX_HEADER: \usepackage{siunitx}
#+LATEX_HEADER: \sisetup{mode=text,range-phrase = {\text{~to~}}}

# font handling

# font handling
#+LATEX_HEADER: \usepackage{fontspec,minted}
#+LATEX_HEADER: \setmonofont{Fira Code} % suports all unicode we care about in code
#+LATEX_HEADER: \setmainfont{DejaVu Serif} % supports all unicode we care about as serif font

# The following is the approach using `ucharclasses` but that ruins
# code blocks of minted...
#   #+LATEX_HEADER: \usepackage{fontspec}
#   #+LATEX_HEADER: \usepackage[Latin,Mathematics,Punctuation,Symbols]{ucharclasses}
#
#   #+LATEX_HEADER: \newfontfamily{\mydefaultfont}{DejaVuSans}
#   #+LATEX_HEADER: \newfontfamily{\mymainfont}{CMU Serif}
#
#   #+LATEX_HEADER: \setTransitionsForPunctuation{\mymainfont}{\mydefaultfont}
#   #+LATEX_HEADER: \setTransitionsForLatin{\mymainfont}{\mydefaultfont}
#   #+LATEX_HEADER: \setTransitionsForSymbols{\mydefaultfont}{\mymainfont}
#   #+LATEX_HEADER: \setTransitionsForMathematics{\mydefaultfont}{\mymainfont}

# package that allows inserting unicode characters in math environment
#+LATEX_HEADER: \usepackage{unicode-math}

#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \usepackage{mhchem}

# make the margin on the sides smaller
#+LATEX_HEADER: \usepackage[margin=2.5cm]{geometry}

# ##############################
# change output of code blocks to use monokai
# ##############################
#+LaTeX_HEADER: \usemintedstyle{monokai}

#+LATEX_HEADER: \definecolor{monokai_bg}{RGB}{39, 40, 34}
#+LATEX_HEADER: \definecolor{monokai_fg}{RGB}{241, 235, 235}
#+LATEX_HEADER: \definecolor{monokai_0}{RGB}{72,72,62}
#+LATEX_HEADER: \definecolor{monokai_1}{RGB}{220,37,102}
#+LATEX_HEADER: \definecolor{monokai_3}{RGB}{212,201,110}
#+LATEX_HEADER: \definecolor{monokai_4}{RGB}{85,188,206}

# color commands
#+LATEX_HEADER: \definecolor{monokai_orange}{RGB}{253, 151, 31}
#+LATEX_HEADER: \newcommand{\orange}{\textcolor{monokai_orange}}
#+LATEX_HEADER: \newcommand{\green}{\textcolor{green}}
#+LATEX_HEADER: \newcommand{\red}{\textcolor{red}}
#+LATEX_HEADER: \DeclareSIUnit\year{yr}

# HTML Export
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="nimdoc.css" />
#+OPTIONS: html-style:nil

#+OPTIONS: toc:nil # turn off Table of Contents here and place it elsewhere

\begin{titlepage}

\begin{center}
  \huge Search for solar axions using a 7-GridPix IAXO prototype detector at CAST

  \vspace{2cm}
  \Large Sebastian Michael Schmidt
\end{center}

place funny logos and stuff

\end{titlepage}

#+TOC: headlines 2


# Part 0: Introduction

* Introduction                                                        :Intro:

* About this thesis (structure)                                       :Intro:

Explanation about the thesis structure and introduction of the "full
thesis document".

The thesis you are reading right now is a shortened version of the
full document it is part of. To conform to the expectations of a PhD
thesis many parts are removed that are irrelevant for the basic
presentation of the work done during the thesis.

However, a fellow researcher who wishes to understand all the details,
in particular in terms of reproducibility of the results, the full
document should be read instead.

The full document is found at:

*TODO*: insert link, probably to GitHub as well as some other source

The main difference between the regular thesis document and the
extended version are the following. The extended version contains:
- either inline code or links to the code that produces *every plot*
  (that is created by me); inline code is used if the required code to
  generate the plot is less than a certain amount of lines.
  For non-inlined code the used code is referenced (link to the code +
  correct git commit)
- access to *all* raw and reconstructed data to reproduce the results
- additional chapters that were not relevant enough / polished enough
  for inclusion into the thesis. This includes additional plots,
  investigations of detector behavior etc., theoretical calculations
  and more.

In essence the idea is to provide a fully reproducible thesis. The
extended version should ideally be read as a mix of the generated PDF
and the real Org file behind it.

The extended version includes many source code blocks that can be
extracted using [[https://github.com/OrgTangle/ntangle][ntangle]]:
#+begin_src sh
ntangle thesis.org
#+end_src

Ideally, all results can be reproduced with a single:
#+begin_src sh
./generateResults.sh
#+end_src
call (we'll see how that will work out).

The package versions for the code used in the extended version will be
frozen at a specific time. The list of version numbers will be found
below.

*TODO*: Add version numbers of all packages used for final plots.

*TODO*: Have specific marking in (sub)sections if they contain more
information in extended version?

* TODO List of todos [0/2]                                   :Intro:noexport:

** TODO Have reference to Firmware used at CAST in each run

** TODO Run list (appendix)

** TODO Include exact results from Geometer measurements

Find in EDH and include, even if we don't use it. Referenced in X-ray
finger measurements.


** Points of contention

At the moment <2021-07-31 Sat 11:36> my biggest point of uncertainty
is the whole detector calibration part + how this plays into a
software framework.

Difficult to come up with good layout at this point. Will be easier
once more notes are added in each part I think.

* Theory of axions                                                   :Theory:

From a historical standpoint including the strong CP problem, we go
over to the Peccei-Quinn solution. Another way to look at it is from a
modern standpoint asking why does the neutron not have a dipole moment?

** Historical origins

From electroweak theory we know about CP violation. Standard model for
strong force is just SU(3) vs. SU(2) for electroweak.

Lagrangian allows mostly the same terms for both forces. This implies
there should be a strong CP violation. This isn't observed and even
today theh neutron electric dipole moment is restricted to values
smaller $d_N \leq 1e-26 \text{? some units}$.

Merge the next section into this one and change title?

** Strong CP problem

Use the schematic I created for Hendrik's presentation?

** Peccei-Quinn solution

Main Peccei-Quinn paper citation.

Solution by introducing another global U(1) symmetry that is
spontaneously broken below some energy scale. 

** The axion

Leads to a pseudo Nambu-Goldstone boson that Wilzcek named the Axion
(ref a pic of axion detergent), as it washes the standard model clean
of an ugly stain.

** DFSZ & KSVZ axion models

Further developments lead to more complex axion models that better fit
with our understanding.

Two main types of models emerged.

** Implications for axion interactions

Axions are apparently not interacting a whole lot, otherwise we'd know
about them already. Very weak interaction

Main interaction arises due to anomalies in standard model that allow
for a Fermion loop diagram. That allows for coupling to
gluons. Effective photon coupling is the result, equivalent to
Primakoff effect for pions (also an effective coupling!).

** Solar axion flux

Important for us? How do we detect them.

Have a simple derivation from KG equation? Take a look at Biljana &
Kreso for simple overview and simplify.

Take KG equation and derive interaction.

Interaction tells us conversion is proportional to B and L. Where are
strong Bs for long Ls? Solar core.
Take modern solar model to plot the density profile & especially
temperature. Density + temperature allows us to compute:
- number of photons
- at various photon energies

By wrapping blackbody radiation (ref, 3 sentences about it) present in
solar core with Primakoff coupling, we get an effective axion flux
equivalent to:

$dΦ/dE ∝ g_{aγ}² · \text{black body radiation}$

*** Primakoff flux

Including analytical equation for flux... :)

#+begin_src nim :tangle /tmp/solar_axion_flux.nim
import unchained, ggplotnim, math, chroma, ginger
defUnit(keV⁻¹•m⁻²•yr⁻¹)
defUnit(keV⁻¹•cm⁻²•s⁻¹)
defUnit(GeV⁻¹)

proc axionFluxPrimakoff(E_a: keV, g_aγ: GeV⁻¹): keV⁻¹•cm⁻²•s⁻¹ =
  ## dΦ_a/dE taken from paper about first CAST results \cite{PhysRevLett.94.121301}
  let g₁₀ = g_aγ / 1e-10.GeV⁻¹ # * 10e10.GeV¹ #
  result = g₁₀^2 * 3.821e10.cm⁻²•s⁻¹•keV⁻¹ * (E_a / 1.keV)^3 / (exp(E_a / (1.103.keV)) - 1)

proc axFluxPerYear(E_a: keV, g_aγ: GeV⁻¹): keV⁻¹•m⁻²•yr⁻¹ =
  result = axionFluxPrimakoff(E_a, g_aγ).to(keV⁻¹•m⁻²•yr⁻¹)

proc axionFluxPrimakoffMasterThesis(ω: keV, g_ay: GeV⁻¹): keV⁻¹•m⁻²•yr⁻¹ =
  # axion flux produced by the Primakoff effect
  # in units of m^(-2) year^(-1) keV^(-1)
  result = 2.0 * 1e18.keV⁻¹•m⁻²•yr⁻¹ * (g_ay / 1e-12.GeV⁻¹)^2 * pow(ω / 1.keV, 2.450) * exp(-0.829 * ω / 1.keV)

let E = linspace(1e-3, 14.0, 1000)
let df = seqsToDf(E)
  .mutate(f{float: "Flux" ~ axionFluxPrimakoff(`E`.keV, 1e-10.GeV⁻¹).float})
  .mutate(f{float: "FluxYr" ~ axFluxPerYear(`E`.keV, 1e-11.GeV⁻¹).float})
  .mutate(f{float: "FluxMSc" ~ axionFluxPrimakoffMasterThesis(`E`.keV, 1e-11.GeV⁻¹).float})    
ggplot(df, aes("E", "Flux")) +
  geom_line() +
  geom_line(aes = aes(y = "FluxMSc"), color = some(parseHex("0000FF"))) + 
  ggtitle("Solar axion flux due to Primakoff production, g_aγ = 10⁻¹⁰·GeV⁻¹") +
  xlab("Energy [keV]") +
  #ylab("Axion flux [keV⁻¹·cm⁻²·s⁻¹]") +
  ylab("Axion flux [keV⁻¹·m⁻²·yr⁻¹]") +  
  ggsave("/tmp/primakoff_axion_flux.pdf")

ggplot(df.mutate(f{"Flux" ~ `Flux` / 1e10}), aes("E", "Flux")) +
  geom_line() +
  #xlab("Energy [keV]", tickFont = font(12.0), margin = 1.5) +
  xlab(r"\fontfamily{lmss}\selectfont Energy [$\si{\keV}$]", margin = 2.0, font = font(16.0),
       tickFont = font(16.0)) +
  xlim(0, 14) + 
  #ylab("Axion flux [10¹⁰ keV⁻¹·cm⁻²·s⁻¹]", margin = 1.5) +
  ylab(r"\fontfamily{lmss}\selectfont Axion flux [\SI[print-unity-mantissa=false]{1e10}{\keV^{-1} \cm^{-2} \second^{-1}}]",
       margin = 2.0,
       font = font(16.0)) + 
  #     tickFont = font(12.0)) +
  #ggtitle(r"Expected solar axion flux, g_aγ = 10⁻¹⁰ GeV⁻¹", titleFont = font(12.0)) +
  annotate(r"\fontfamily{lmss}\selectfont Expected solar axion flux" &
    r"\\$g_{aγ} = \SI[print-unity-mantissa=false]{1e-10}{\GeV^{-1}}$", #10⁻¹⁰ GeV⁻¹",
           x = 6.2, y = 6.2, 
           font = font(16.0),
           backgroundColor = transparent) +
  #ggtitle(r"Expected solar axion flux, $g_{aγ} = \SI{1e-11}{\GeV^{-1}}$", titleFont = font(12.0)) + 
  #ggsave("/tmp/cristina_primakoff_axion_flux.pdf", width = 400, height = 300) #, useTeX = true, standalone = true)
  ggsave("/tmp/cristina_primakoff_axion_flux.pdf", useTeX = true, standalone = true)
  

defUnit(m⁻²•yr⁻¹)  
echo 1.cm⁻²•s⁻¹.to(m⁻²•yr⁻¹)
#+end_src

#+RESULTS:

There are different analytical expressions for the solar axion flux
for Primakoff production. These stem from the fact that a solar model
is used to model the internal density, temperature, etc. in the Sun to
compute the photon distribution (essentially the blackbody radiation)
near the core. From it (after converting via the Primakoff effect) we
get the axion flux.

Different solar models result in different expressions for the
flux. The first one uses an older model, while the latter ones use
newer models.

*** Axion-electron flux

*citations*: Redondo 2013, maybe (Johanna + Sebastian Hoof something?)

Expected axion flux combined.

Reference to file storing the results for specific coupling constants.

Much more complicated.

ABC components.

B and C can be expressed analytically.

A cannot, needs opacity project.

Show plot of differential axion flux.

For a derivation of this, consider section about ray tracing. Custom
computation of A done by Johanna in code developed by her & me in
*LINK*.

** TODO possibly add chameleons?

?? will depend on whether 

** Current bounds on axion couplings

Astronomical axion bounds.

Cavity bounds.

Helioscope bounds.

(what else?)

*TODO*: include newest Chandra results for coupling constant

* Axion helioscopes                                                  :Theory:

** TODO small section about other kinds of experiment?

** CERN Axion Solar Telescope (CAST)

Basic data.

Data taking periods.

** International AXion Observatory (IAXO)

*** BabyIAXO

* Gaseous detectors principles                                       :Theory:

** MicroMegas working principle

Take my own sketch and fix it up.

** Timepix ASIC

Introduce Timepix. Short introduction to how they are built?

Check Lucian's master thesis for information about Timepix & gaseous
detector physics. :)

** Christoph detector as example of simple Timepix based detector


* Septemboard detector                                                :Part2:

The first section introduces the reasoning behind building a more
complicated detector. Existing detector has multiple downsides, seen
in background rate & detector efficiency.

In the further sections we discuss each additional detector feature in
detail and explain why it was added / what drawback of the previous
detector should be improved on.

After we have introduced the detector as a whole we talk about the
calibrations that are necessary to perform sensible measurements.

** The why

Why do we build such a 'complicated' detector?

Background increases to edges, esp. corners.

Background rate has 


** TODO Render done by Tobi. Exploded view.

*** Cooling system, small motivation?

Flow rate!

** Scintillator vetoes

Scintillators: remove muons / muon induced X-rays

SiPM: remove orthogonal muons, expected energy ~8 keV.

** FADC

FADC: required for trigger + some time information of events.

Flash ADC. Fast ADC. 1024 channels, cyclic register.

Used at 1 GHz, i.e. covering ~1 μs?

*** Pedestals

*** Noise sensitive



** SiN window

Much better sensitivity, especially at low energies, important in
particular for axion electron & chameleon, not so much Primakoff.

Comparison of different window setups.

** TODO schematic of whole readout chain

Create a full flow chart of how everything is connected.

We have our notes about where each cable goes etc.

TOS. TOF.

Link to repositories (maybe we can make the Virtex TOS public?) 

Link to TOF firmware.


** Detector calibrations etc.

What kind of calibrations exist. How do they work, what do they do
etc.

From a purely detector standpoint.

Polya distributio goes here somewhere. Related to gaseous detector
physics & our detector in particular.

* Chapter about analysis principle                                    :Part2:

After introducing detector specific calibrations etc. we can go on to
what the steps are that are required to turn a calibrated detector
(one that is sensitive to N electrons essentially) into something that
can do physics.

Need some chapter that talks about the detector specific details that
explain how a limit / physics result is obtained.

Take data.

Reconstruct data.
Compute properties, requires energy calibration etc.

Perform signal / background rejection.

Get background rate + signals in tracking.

Get expected flux from theory.

Get detector efficiencies.

Combine efficiencies & theory flux in raytracing simulation.

Compute 'real' expected signal.

Use suitable limit calculation method to compute a limit.

We can split this into two pieces?:

** How to compute background rate

** How to compute a limit

For =mclimit= use the notes in StatusAndProgress about how limit
calculation works. Might be good in general, because a lot of it
applies elsewhere anyway.

* Raytracing - where does this belong? :Part2:

Ray tracing through the detector. 

** Computation of atomic processes :noexport:

Computation of atomic processes done in *CODE*. 



* Software                                                            :Part2:

Introduce used software for analysis.

Previous code used MarlinTPC (already extended a framework for use for
gaseous detectors, focus on strips). Additional extension to use our
new detector features would be beyond the scope of the framework. 

** Nim

Shortly introduce Nim & why it was chosen.

Efficient, productive, gets out of my way.

** TimepixAnalysis

Framework written for data anlysis.


* Detector preparation / study / characterization etc.                :Part3:

** CAST Detector Lab

Measurements for X-ray reference data

Detector lab measurements were only performed after the data taking
period at CAST was over. From a logical standpoint it makes more sense
to talk about it before though.

Everything required in StatusAndProgress. Will need to redo all plots
of course.

** Detector calibrations + characterization plots

*** FADC spectrum & threshold

** 55Fe spectra

** Energy calibration, how done?


* Detector installation at CAST & data taking                         :Part3:

** Lead shielding at CAST 

PDF of lead shielding. Extract one image as reference, refer to full
one in appendix.

** Installation & setup

Use detector documentation written for CERN (Thank fucking god I had
to write this back then).

** X-ray finger runs

2 X-ray finger runs were made. One near beginning, one near end.

Plot of X-ray finger centers.

Mention how this plays into the analysis side, that it means we need
to adjust the ray tracing.

** Issues etc. during data taking period

Noise issues, scintillators not working in Run 2.

** Run 2 and Run 3

Different detector calibrations in each run.

Amount of data in each. Take table from StatusAndProgress.


* Background rate computation                                      :Analysis:

** Understanding background rate

3 keV is easy to understand.

8-9 keV is more difficult. 

** Muon calculations :noexport:

Probably not going to make it into final thesis? We'll see, take from
StatusAndProgress. Maybe shortened version will make it.

* Limit calculation                                                :Analysis:

Using background rate & methods to determine it.

** Compute limit w/ our method (whatever that will finally be)

** Comparison to 2013 limit (using their method)

** Limit calculation using neural networks :PENDING:


* Outlook                                                             :Part5:

* Summary & conclusion                                                :Part5:

* Acknowledgments                                                     :Part5:

Thanks to Klaus & group.

Thanks to Araq for building Nim.

Thanks to Nim community, and especially:
mratsim, Hugo, Clonkk, Andrea Ferreti (alea among others), brentp
(plotly was a *huge* help in the beginning), Bluenote10 (NimData was
great), yglukhov (nimpy in particular!!)



* Appendix                                                         :Appendix:
